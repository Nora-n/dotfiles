let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/.config/nvim/snippets/latex
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +1404 ~/.config/nvim/snippets/tex/tex.lua
badd +625 ~/.config/texmf/tex/latex/local/cours-preambule.sty
badd +312 ~/.config/texmf/tex/latex/local/custikz.sty
badd +982 ~/.config/nvim/snippets/tex/tex.snippets
badd +120 ~/.config/texmf/tex/latex/local/locdef.sty
badd +25 ~/.config/texmf/tex/latex/local/mintikz.sty
badd +25 ~/.config/nvim/snippets/vimwiki/wiki.lua
badd +570 ~/Documents/Enseignement/Prepa/BPEP/fichiers_utiles/raccourcis_communs.sty
badd +479 ~/Documents/Enseignement/Prepa/BPEP/fichiers_utiles/preambule.sty
argglobal
%argdel
$argadd ~/.config/nvim/snippets/tex/tex.lua
edit ~/.config/texmf/tex/latex/local/cours-preambule.sty
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 94 + 94) / 189)
exe 'vert 2resize ' . ((&columns * 94 + 94) / 189)
tcd ~/Documents/Enseignement/Prepa/BPEP
argglobal
balt ~/.config/nvim/snippets/tex/tex.lua
setlocal foldmethod=expr
setlocal foldexpr=v:lua.require'lazyvim.util'.ui.foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=99
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
let s:l = 625 - ((21 * winheight(0) + 23) / 46)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 625
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("~/Documents/Enseignement/Prepa/BPEP/fichiers_utiles/preambule.sty", ":p")) | buffer ~/Documents/Enseignement/Prepa/BPEP/fichiers_utiles/preambule.sty | else | edit ~/Documents/Enseignement/Prepa/BPEP/fichiers_utiles/preambule.sty | endif
if &buftype ==# 'terminal'
  silent file ~/Documents/Enseignement/Prepa/BPEP/fichiers_utiles/preambule.sty
endif
balt ~/Documents/Enseignement/Prepa/BPEP/fichiers_utiles/raccourcis_communs.sty
setlocal foldmethod=expr
setlocal foldexpr=v:lua.require'lazyvim.util'.ui.foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=99
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
let s:l = 462 - ((12 * winheight(0) + 23) / 46)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 462
normal! 013|
wincmd w
exe 'vert 1resize ' . ((&columns * 94 + 94) / 189)
exe 'vert 2resize ' . ((&columns * 94 + 94) / 189)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
